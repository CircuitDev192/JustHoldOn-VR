//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_vArmory_Grip;
        
        private static SteamVR_Action_Boolean p_vArmory_Trigger;
        
        private static SteamVR_Action_Boolean p_vArmory_Menu;
        
        private static SteamVR_Action_Boolean p_vArmory_Touchpad;
        
        private static SteamVR_Action_Vector2 p_vArmory_TouchpadAxis;
        
        private static SteamVR_Action_Single p_vArmory_TriggerAxis;
        
        private static SteamVR_Action_Skeleton p_vArmory_RightSkel;
        
        private static SteamVR_Action_Skeleton p_vArmory_LeftSkel;
        
        private static SteamVR_Action_Pose p_vArmory_LeftPose;
        
        private static SteamVR_Action_Pose p_vArmory_RightPose;
        
        private static SteamVR_Action_Boolean p_vArmory_A;
        
        private static SteamVR_Action_Boolean p_vArmory_B;
        
        private static SteamVR_Action_Boolean p_vArmory_Joystick;
        
        private static SteamVR_Action_Vector2 p_vArmory_JoystickAxis;
        
        public static SteamVR_Action_Boolean vArmory_Grip
        {
            get
            {
                return SteamVR_Actions.p_vArmory_Grip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vArmory_Trigger
        {
            get
            {
                return SteamVR_Actions.p_vArmory_Trigger.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vArmory_Menu
        {
            get
            {
                return SteamVR_Actions.p_vArmory_Menu.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vArmory_Touchpad
        {
            get
            {
                return SteamVR_Actions.p_vArmory_Touchpad.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 vArmory_TouchpadAxis
        {
            get
            {
                return SteamVR_Actions.p_vArmory_TouchpadAxis.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Single vArmory_TriggerAxis
        {
            get
            {
                return SteamVR_Actions.p_vArmory_TriggerAxis.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Skeleton vArmory_RightSkel
        {
            get
            {
                return SteamVR_Actions.p_vArmory_RightSkel.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton vArmory_LeftSkel
        {
            get
            {
                return SteamVR_Actions.p_vArmory_LeftSkel.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Pose vArmory_LeftPose
        {
            get
            {
                return SteamVR_Actions.p_vArmory_LeftPose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Pose vArmory_RightPose
        {
            get
            {
                return SteamVR_Actions.p_vArmory_RightPose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Boolean vArmory_A
        {
            get
            {
                return SteamVR_Actions.p_vArmory_A.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vArmory_B
        {
            get
            {
                return SteamVR_Actions.p_vArmory_B.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean vArmory_Joystick
        {
            get
            {
                return SteamVR_Actions.p_vArmory_Joystick.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 vArmory_JoystickAxis
        {
            get
            {
                return SteamVR_Actions.p_vArmory_JoystickAxis.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.vArmory_Grip,
                    SteamVR_Actions.vArmory_Trigger,
                    SteamVR_Actions.vArmory_Menu,
                    SteamVR_Actions.vArmory_Touchpad,
                    SteamVR_Actions.vArmory_TouchpadAxis,
                    SteamVR_Actions.vArmory_TriggerAxis,
                    SteamVR_Actions.vArmory_RightSkel,
                    SteamVR_Actions.vArmory_LeftSkel,
                    SteamVR_Actions.vArmory_LeftPose,
                    SteamVR_Actions.vArmory_RightPose,
                    SteamVR_Actions.vArmory_A,
                    SteamVR_Actions.vArmory_B,
                    SteamVR_Actions.vArmory_Joystick,
                    SteamVR_Actions.vArmory_JoystickAxis};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.vArmory_Grip,
                    SteamVR_Actions.vArmory_Trigger,
                    SteamVR_Actions.vArmory_Menu,
                    SteamVR_Actions.vArmory_Touchpad,
                    SteamVR_Actions.vArmory_TouchpadAxis,
                    SteamVR_Actions.vArmory_TriggerAxis,
                    SteamVR_Actions.vArmory_RightSkel,
                    SteamVR_Actions.vArmory_LeftSkel,
                    SteamVR_Actions.vArmory_LeftPose,
                    SteamVR_Actions.vArmory_RightPose,
                    SteamVR_Actions.vArmory_A,
                    SteamVR_Actions.vArmory_B,
                    SteamVR_Actions.vArmory_Joystick,
                    SteamVR_Actions.vArmory_JoystickAxis};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[0];
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[0];
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.vArmory_LeftPose,
                    SteamVR_Actions.vArmory_RightPose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.vArmory_Grip,
                    SteamVR_Actions.vArmory_Trigger,
                    SteamVR_Actions.vArmory_Menu,
                    SteamVR_Actions.vArmory_Touchpad,
                    SteamVR_Actions.vArmory_A,
                    SteamVR_Actions.vArmory_B,
                    SteamVR_Actions.vArmory_Joystick};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.vArmory_TriggerAxis};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.vArmory_TouchpadAxis,
                    SteamVR_Actions.vArmory_JoystickAxis};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.vArmory_RightSkel,
                    SteamVR_Actions.vArmory_LeftSkel};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.vArmory_Grip,
                    SteamVR_Actions.vArmory_Trigger,
                    SteamVR_Actions.vArmory_Menu,
                    SteamVR_Actions.vArmory_Touchpad,
                    SteamVR_Actions.vArmory_TouchpadAxis,
                    SteamVR_Actions.vArmory_TriggerAxis,
                    SteamVR_Actions.vArmory_A,
                    SteamVR_Actions.vArmory_B,
                    SteamVR_Actions.vArmory_Joystick,
                    SteamVR_Actions.vArmory_JoystickAxis};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_vArmory_Grip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VArmory/in/Grip")));
            SteamVR_Actions.p_vArmory_Trigger = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VArmory/in/Trigger")));
            SteamVR_Actions.p_vArmory_Menu = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VArmory/in/Menu")));
            SteamVR_Actions.p_vArmory_Touchpad = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VArmory/in/Touchpad")));
            SteamVR_Actions.p_vArmory_TouchpadAxis = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/VArmory/in/TouchpadAxis")));
            SteamVR_Actions.p_vArmory_TriggerAxis = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/VArmory/in/TriggerAxis")));
            SteamVR_Actions.p_vArmory_RightSkel = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/VArmory/in/RightSkel")));
            SteamVR_Actions.p_vArmory_LeftSkel = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/VArmory/in/LeftSkel")));
            SteamVR_Actions.p_vArmory_LeftPose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/VArmory/in/LeftPose")));
            SteamVR_Actions.p_vArmory_RightPose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/VArmory/in/RightPose")));
            SteamVR_Actions.p_vArmory_A = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VArmory/in/A")));
            SteamVR_Actions.p_vArmory_B = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VArmory/in/B")));
            SteamVR_Actions.p_vArmory_Joystick = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/VArmory/in/Joystick")));
            SteamVR_Actions.p_vArmory_JoystickAxis = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/VArmory/in/JoystickAxis")));
        }
    }
}
